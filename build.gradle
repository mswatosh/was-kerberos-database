apply plugin: 'war'
apply plugin: 'ear'
apply plugin: 'liberty'
apply plugin: 'docker-compose'
group = 'com.example.liberty.kerberos'
version = '1.0-SNAPSHOT'
description = "Kerberos App for Liberty"

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

buildDir = 'liberty/build'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:2.6.3'
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.10.4"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    providedCompile group:'javax.servlet', name:'javax.servlet-api', version:'4.0.1'
    providedCompile group: 'javax.enterprise', name: 'cdi-api', version: '2.0'
    providedCompile group: 'javax.security.enterprise', name: 'javax.security.enterprise-api', version: '1.0'
    providedCompile group: 'javax.transaction', name: 'javax.transaction-api', version: '1.3'
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3'
    testCompile group:'commons-httpclient', name:'commons-httpclient', version:'3.1'
    testCompile group:'junit', name:'junit', version:'4.12'
    libertyRuntime group:'io.openliberty', name:'openliberty-runtime', version:'[17.0.0.4,)'
    runtime group: 'com.ibm.db2.jcc', name: 'db2jcc', version: 'db2jcc4'
    runtime group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '8.2.1.jre8'
    runtime (group: 'com.oracle.ojdbc', name: 'ojdbc8_g', version: '19.3.0.0') { transitive = false }
}

task copyDependenciesLiberty(type: Copy) {
   from configurations.runtime
   include 'db2jcc*'
   include 'mssql*'
   include 'ojdbc8_g*'
   rename 'db2jcc(.*)', 'db2jcc.jar'
   rename 'mssql(.*)', 'mssql.jar'
   rename 'ojdbc8_g(.*)', 'ojdbc8_g.jar'
   into 'liberty/build/dependencies'
}

task copyDependenciesWebSphere(type: Copy) {
   from configurations.runtime
   include 'db2jcc*'
   include 'mssql*'
   include 'ojdbc8_g*'
   rename 'db2jcc(.*)', 'db2jcc.jar'
   rename 'mssql(.*)', 'mssql.jar'
   rename 'ojdbc8_g(.*)', 'ojdbc8_g.jar'
   into 'websphere-traditional/build/dependencies'
}

ext {
    appName = project.name
    testServerHttpPort = 9080
    testServerHttpsPort = 9443
    warContext = appName
}

liberty {
    server {
        name = "defaultServer"
        looseApplication = false

        configFile = file("liberty/server.xml")

        bootstrapProperties = ['default.http.port': testServerHttpPort,
                               'default.https.port': testServerHttpsPort,
                               'app.context.root': warContext]

        packageLiberty {
            archive = "$buildDir/${appName}.zip"
            include = "usr"
        }
    }
}

task packageWebSphere(type: Copy) {
    from "liberty/build"
    into "websphere-traditional/build"
}

war {
    from (sourceSets.main.output) {
        archiveName = "${baseName}.${extension}"
    }
}

clean.dependsOn 'libertyStop'
libertyPackage.dependsOn 'libertyStop'
libertyPackage.dependsOn 'copyDependenciesLiberty'
libertyPackage.dependsOn 'copyDependenciesWebSphere'
composeBuild.dependsOn 'oracle:prebuildOracle'
composeUp.dependsOn 'libertyPackage'
composeUp.dependsOn 'composeDown'
composeUp.dependsOn 'composeBuild'
libertyPackage.finalizedBy 'packageWebSphere'